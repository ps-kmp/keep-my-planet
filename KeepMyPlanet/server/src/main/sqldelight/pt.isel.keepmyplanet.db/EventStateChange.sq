import kotlinx.datetime.LocalDateTime;
import pt.isel.keepmyplanet.domain.common.Id;
import pt.isel.keepmyplanet.domain.event.EventStatus;
import pt.isel.keepmyplanet.domain.user.Name;

CREATE TABLE event_state_changes (
    id BIGINT AS Id PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    event_id BIGINT AS Id NOT NULL,
    new_status TEXT AS EventStatus NOT NULL,
    changed_by BIGINT AS Id NOT NULL,
    change_time TIMESTAMP AS LocalDateTime NOT NULL,
    FOREIGN KEY (event_id) REFERENCES events(id) ON DELETE CASCADE,
    FOREIGN KEY (changed_by) REFERENCES users(id) ON DELETE CASCADE
);

insert:
INSERT INTO event_state_changes (event_id, new_status, changed_by, change_time)
VALUES (:event_id, :new_status, :changed_by, :change_time)
RETURNING *;

findByEventId:
SELECT * FROM event_state_changes
WHERE event_id = :eventId
ORDER BY change_time DESC;

getById:
SELECT * FROM event_state_changes WHERE id = :id;

findByEventIdWithUserName:
SELECT esc.id, esc.event_id, esc.new_status, esc.changed_by, esc.change_time, u.name AS changed_by_name
FROM event_state_changes esc
JOIN users u ON esc.changed_by = u.id
WHERE esc.event_id = :eventId
ORDER BY esc.change_time DESC;
