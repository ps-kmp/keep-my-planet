import kotlinx.datetime.LocalDateTime;
import pt.isel.keepmyplanet.domain.common.Id;
import pt.isel.keepmyplanet.domain.user.Email;
import pt.isel.keepmyplanet.domain.user.Name;
import pt.isel.keepmyplanet.domain.user.PasswordHash;
import pt.isel.keepmyplanet.domain.user.UserRole;

CREATE TABLE users (
    id BIGINT AS Id PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT AS Name UNIQUE NOT NULL,
    email TEXT AS Email UNIQUE NOT NULL,
    password_hash TEXT AS PasswordHash NOT NULL,
    role TEXT AS UserRole NOT NULL DEFAULT 'USER',
    profile_picture_id BIGINT AS Id,
    created_at TIMESTAMP AS LocalDateTime NOT NULL,
    updated_at TIMESTAMP AS LocalDateTime NOT NULL
);

insert:
INSERT INTO users(name, email, password_hash, role, profile_picture_id, created_at, updated_at)
VALUES (:name, :email, :password_hash, :role, :profile_picture_id, :created_at, :updated_at)
RETURNING *;

getById:
SELECT * FROM users WHERE id = :id;

getAll:
SELECT * FROM users ORDER BY id LIMIT :limit OFFSET :offset;

findByIds:
SELECT * FROM users WHERE id IN :ids;

updateUser:
UPDATE users
SET name = :name,
    email = :email,
    password_hash = :password_hash,
    role = :role,
    profile_picture_id = :profile_picture_id,
    updated_at = :updated_at
WHERE id = :id
RETURNING *;

updateUserRole:
UPDATE users
SET role = :role,
    updated_at = :updated_at
WHERE id = :id
RETURNING *;

deleteById:
DELETE FROM users WHERE id = :id;

findByEmail:
SELECT * FROM users WHERE email = :email;

findByName:
SELECT * FROM users WHERE name = :name;