import pt.isel.keepmyplanet.domain.common.Id;
import pt.isel.keepmyplanet.domain.zone.ZoneStatus;
import kotlinx.datetime.LocalDateTime;


CREATE TABLE zone_state_changes (
    id BIGINT AS Id PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    zone_id BIGINT AS Id NOT NULL,
    new_status TEXT AS ZoneStatus NOT NULL,
    changed_by BIGINT AS Id,
    triggered_by_event_id BIGINT AS Id,
    change_time TIMESTAMP AS LocalDateTime NOT NULL,
    FOREIGN KEY (zone_id) REFERENCES zones(id) ON DELETE CASCADE,
    FOREIGN KEY (changed_by) REFERENCES users(id) ON DELETE SET NULL,
    FOREIGN KEY (triggered_by_event_id) REFERENCES events(id) ON DELETE SET NULL
);

insert:
INSERT INTO zone_state_changes(zone_id, new_status, changed_by, triggered_by_event_id, change_time)
VALUES (:zone_id, :new_status, :changed_by, :triggered_by_event_id, :change_time)
RETURNING *;

findByZoneId:
SELECT * FROM zone_state_changes
WHERE zone_id = :zoneId
ORDER BY change_time DESC;

getById:
SELECT * FROM zone_state_changes WHERE id = :id;